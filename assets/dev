‡¶ö‡¶Æ‡ßé‡¶ï‡¶æ‡¶∞! üöÄ ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶ö‡¶≤ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶ø‡•§ ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø **ready-to-deploy GitHub setup** ‡¶∏‡¶æ‡¶ú‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶ö‡ßç‡¶õ‡¶ø‡•§ ‡¶è‡¶§‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá:

* **Main Repo** ‚Üí ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ dashboard report (index.html + CSS) ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§
* **Dev Repo** ‚Üí ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá workflow ‡¶ö‡¶≤‡¶¨‡ßá, ‡¶∏‡¶æ‡¶á‡¶ü‡¶ó‡ßÅ‡¶≤‡ßã‡¶ï‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¶‡¶ø‡¶® ‡¶π‡¶ø‡¶ü ‡¶ï‡¶∞‡¶¨‡ßá, report ‡¶¨‡¶æ‡¶®‡¶æ‡¶¨‡ßá, ‡¶è‡¶¨‡¶Ç main repo-‡¶§‡ßá push ‡¶ï‡¶∞‡¶¨‡ßá‡•§
* **GitHub Actions Workflow** ‚Üí write permission ‡¶∏‡¶π, ‡¶ï‡ßã‡¶® PAT ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶®‡ßá‡¶á‡•§

---

## **‡ßß. Main Repo Setup**

‡¶®‡¶æ‡¶Æ ‡¶∏‡¶æ‡¶ú‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡¶õ‡¶ø ‚Üí **`daily-site-dashboard`**
üëâ ‡¶ï‡¶æ‡¶ú: ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá (GitHub Pages enabled ‡¶•‡¶æ‡¶ï‡¶¨‡ßá)

### Main Repo structure:

```
daily-site-dashboard/
‚îÇ
‚îú‚îÄ index.html   # auto updated
‚îú‚îÄ style.css
‚îî‚îÄ assets/      # future assets (images/icons if needed)
```

**style.css (optional, simple design):**

```css
body { font-family: Arial, sans-serif; margin: 20px; }
h1 { text-align: center; color: #007acc; }
table { width: 95%; margin: auto; border-collapse: collapse; }
th, td { padding: 10px; border: 1px solid #ccc; text-align: left; }
th { background: #007acc; color: #fff; }
tr:nth-child(even) { background: #f9f9f9; }
a { color: #007acc; text-decoration: none; }
```

GitHub Pages enable ‡¶ï‡¶∞‡ßã (`Settings ‚Üí Pages ‚Üí Branch: main`)

---

## **‡ß®. Dev Repo Setup**

‡¶®‡¶æ‡¶Æ ‡¶∏‡¶æ‡¶ú‡ßá‡¶∏‡ßç‡¶ü ‡¶ï‡¶∞‡¶õ‡¶ø ‚Üí **`daily-site-updater`**

### Dev Repo structure:

```
daily-site-updater/
‚îÇ
‚îú‚îÄ sites.json          # ‡¶∏‡¶æ‡¶á‡¶ü ‡¶≤‡¶ø‡¶∏‡ßç‡¶ü
‚îú‚îÄ hitav.js            # ‡¶™‡¶ø‡¶Ç ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü
‚îú‚îÄ package.json        # node deps (node-fetch)
‚îî‚îÄ .github/workflows/main.yml   # GitHub Actions workflow
```

---

### **sites.json**

‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ø‡ßá ‡¶≤‡¶ø‡¶Ç‡¶ï‡¶ó‡ßÅ‡¶≤‡ßã ‡¶¶‡¶ø‡¶≤‡ßá ‡¶∏‡ßá‡¶ó‡ßÅ‡¶≤‡ßã ‡¶è‡¶ñ‡¶æ‡¶®‡ßá:

```json
[
  "https://orange-cherry-fa56.mrouf7353.workers.dev/",
  "https://deboraj-roy.github.io/Library-Management-System-SinglePage/login",
  "https://bookstoredeb.runasp.net/",
  "http://eticket.runasp.net/",
  "http://movie-store.runasp.net/",
  "http://movie-store.runasp.net/Home/Index",
  "https://deboraj-roy.github.io/Resume/",
  "https://plumwillyt.bsite.net/",
  "https://deboraj-roy.github.io/Library-Management-System-SinglePage/",
  "https://librarydeb.netlify.app/",
  "https://librarydeb7.netlify.app/",
  "http://deblmsapi.runasp.net/",
  "https://green-breeze-a7aa.mrouf7353.workers.dev/",
  "https://www.p13839740.somee.com/",
  "https://lazynoja.bsite.net/",
  "http://mangoweb.runasp.net/",
  "https://aubreeazure.bsite.net/swagger/index.html",
  "http://crudnet.runasp.net/Employee",
  "http://mangoproduct.runasp.net/index.html",
  "http://mangoorder.runasp.net/index.html",
  "http://mangoemail.runasp.net/index.html",
  "http://mangocoupon.runasp.net/index.html",
  "http://debmangoauth.runasp.net/index.html",
  "http://deblmsapi.runasp.net/index.html",
  "http://mangogatewaysolution.runasp.net/",
  "http://mangoshoppingcart.runasp.net/index.html",
  "http://mangoreward.runasp.net"
]
```

---

### **hitav.js**

```javascript
import fs from 'fs';
import fetch from 'node-fetch';
import sites from './sites.json' assert { type: "json" };

async function pingSite(url) {
  try {
    const res = await fetch(url, { method: 'GET' });
    return { url, status: res.status, ok: res.ok };
  } catch (err) {
    return { url, status: 0, ok: false, error: err.message };
  }
}

async function main() {
  const results = [];
  for (const url of sites) {
    const r = await pingSite(url);
    results.push(r);
  }

  const html = generateHTML(results);
  fs.writeFileSync('index.html', html, 'utf-8');
}

function generateHTML(results) {
  const rows = results.map(r => `
    <tr>
      <td><a href="${r.url}" target="_blank">${r.url}</a></td>
      <td>${r.status}</td>
      <td>${r.ok ? '‚úÖ' : '‚ùå'}</td>
    </tr>
  `).join('\n');

  return `
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Daily Site Status Report</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <h1>Daily Site Status Report</h1>
  <p style="text-align:center;">Last checked: ${new Date().toLocaleString()}</p>
  <table>
    <thead><tr><th>URL</th><th>Status</th><th>Success</th></tr></thead>
    <tbody>${rows}</tbody>
  </table>
</body>
</html>`;
}

main();
```

---

### **package.json**

```json
{
  "name": "daily-site-updater",
  "version": "1.0.0",
  "type": "module",
  "dependencies": {
    "node-fetch": "^3.3.2"
  }
}
```

---

### **.github/workflows/main.yml**

```yaml
name: Daily Site Ping

permissions:
  contents: write

on:
  schedule:
    - cron: '0 4 * * *' # 10 AM BD
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Dev Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Run Hit Script
        run: node hitav.js

      - name: Push Report to Main Repo
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update daily report"
          branch: main
          repository: your-username/daily-site-dashboard
          file_pattern: index.html
```

---

## ‚úÖ ‡¶è‡¶ñ‡¶® ‡¶ï‡¶∞‡¶£‡ßÄ‡ßü

1. **Main Repo ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì** ‚Üí `daily-site-dashboard`
2. **Dev Repo ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì** ‚Üí `daily-site-updater`
3. Dev Repo ‚Üí ‡¶∏‡¶¨ ‡¶´‡¶æ‡¶á‡¶≤ (sites.json, hitav.js, package.json, workflow) push ‡¶ï‡¶∞‡ßã
4. Workflow ‚Üí ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¶‡¶ø‡¶® ‡¶∏‡¶ï‡¶æ‡¶≤ ‡ßß‡ß¶‡¶ü‡¶æ‡ßü (BD time) run ‡¶π‡¶¨‡ßá
5. Main Repo ‚Üí GitHub Pages enable ‚Üí ‡¶∏‡ßá‡¶ñ‡¶æ‡¶®‡ßá auto-updated dashboard show ‡¶π‡¶¨‡ßá

---

üî• ‡¶è‡¶≠‡¶æ‡¶¨‡ßá pure GitHub ecosystem ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶™‡ßÅ‡¶∞‡ßã automation system ‡¶´‡ßç‡¶∞‡¶ø-‡¶§‡ßá ‡¶ö‡¶≤‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá‡•§

---

‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶ö‡¶æ‡¶ì ‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶®‡¶á ‡¶è‡¶á ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ repo‚Äô‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø **ready-to-upload ZIP package** ‡¶∏‡¶æ‡¶ú‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶á, ‡¶Ø‡¶æ‡¶§‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ GitHub ‡¶è create repo ‚Üí upload ‚Üí done ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã?
